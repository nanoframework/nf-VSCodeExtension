name: CI Test Build

on: [push, pull_request]

jobs:
  build:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env: # TODO: most of these should probably be secret, or at least parsed!
      CI: false


    strategy:
      matrix:
        node-version: [14, 16, lts/*, latest]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Setup Node.js (version: ${{ matrix.node-version }})'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci --prefer-offline --ignore-scripts

      - name: Rebuild and prepare depencencies
        continue-on-error: true #TODO: we currently continue as a warning!
        # `npm rebuild` will run all those post-install scripts for us.
        run: npm rebuild && npm run prepare --if-present

      # - name: Run License check
      #   continue-on-error: true # TODO: remove once fixed!
      #   run: |
      #     # check that all dependencies are .NET nanoFramework OSS license compatible
      #     npm run licence-check --if-present

      - name: Run package audit
        continue-on-error: true #TODO: we currently continue as a warning!
        # this will show the issues with current packages.
        run: |
          npm audit --if-present

      - name: Run lint checks
        run: |
          npm run lint --if-present

      - name: Run build
        run: |
          npm run build --if-present

      - name: Run unit tests for extension
        continue-on-error: true # TODO: remove once fixed!
        run: |
          npm run test --if-present

#       - name: Run Sonar Scan
#         continue-on-error: true # TODO: should handle better!
#         uses: sonarsource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ github.token }}
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: upload logs
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: /home/runner/.npm/_logs/**/* # TODO: the path should be an environment variable!
